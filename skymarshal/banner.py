"""
Banner display module for Skymarshal.

File Purpose: ASCII art banner display and system initialization sequence
Primary Functions/Classes: show_banner(), show_startup_sequence()
Inputs and Outputs (I/O): Displays ASCII art and loading messages to console, no file I/O
"""

import time

from rich.align import Align
from rich.text import Text

from . import __version__
from .models import console


def get_ascii_art():
    """Get the ASCII art from ascii.nfo verbatim."""
    return """‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚°ñ‚†Ä‚†Ä‚¢Ä‚£†‚°§‚†∂‚†∂‚¢¶‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°Ñ‚†Ä‚£∞‚¢ª‚£á‚°¥‚†õ‚†â‚†Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†à‚†≥‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£∑‚¢†‚°è‚¢∏‚¢è‚†Ñ‚†Ä‚°î‚†â‚£Ä‚°¥‚¢ã‚£Å‚£ê‚£¢‚°à‚¢∑‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚¢Ä‚£Ä‚£Ä‚°Ä‚¢∏‚°ü‚£ø‚†Ä‚†à‚¢∏‚£Ä‚£Æ‚£§‚£§‚£ü‚£∞‚£∑‚£∂‚£∂‚£å‚°ô‚†¶‚£ù‚†≤‚£§‚£§‚°Ä‚†Ä‚†Ä‚†Ä
‚£û‚†Ä‚¢Ñ‚†â‚†ª‚¢ß‚°à‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚†ü‚†â‚†â‚†â‚¢â‚£ô‚¢ª‚£ñ‚°Ç‚†à‚†â‚†â‚†â‚†Ä‚†Ä‚†Ä‚†Ä
‚¢π‚°Ñ‚†Ä‚†ë‚£Ñ‚†Ä‚†à‚†≥‚£§‚£æ‚£ø‚£ø‚†É‚†ñ‚†í‚£Ñ‚†Ä‚°ß‚¢æ‚°è‚¢ª‚°ó‚†Ç‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚¢≥‚°Ä‚†Ä‚¢∏‚†≥‚£Ñ‚†Ä‚¢∏‚¢ø‚£ø‚¢ø‚°Ä‚°öüü†‚£ø‚†Ä‚†Ä‚£òüü†‚£∑‚£§‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚¢∑‚°Ä‚†ò‚£ß‚°∏‚†É‚†Ä‚£º‚†ã‚£∏‚†Å‚†Ä‚†í‚†ã‚¢Ä‚°∞‚†Å‚†Ä‚°º‚†Å‚†Ä‚†â‚†õ‚¢¶‚°Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚£∏‚†Å‚†Ä‚°º‚†Å‚†¥‚¢æ‚°á‚¢Ä‚°è‚†Ä‚†Ä‚†§‚†ñ‚¢´‚°á‚†Ä‚¢†‚†É‚†Ä‚†Ä‚£Ä‚£Ä‚£Ä‚†ø‚¢¶‚°Ä‚†Ä
‚†Ä‚†Ä‚¢π‚°Ä‚†Ä‚†Å‚†Ä‚£æ‚°ø‚¢Å‚°û‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°Ö‚†Ä‚†ò‚°Ñ‚†Ä‚¢∏‚†Å‚°∂‚°Ñ‚¢∫‚£≥‚†π‚£Ü
‚†Ä‚†Ä‚†Ä‚†ì‚†¶‚£∂‚†ã‚†Ä‚†á‚£∏‚†Å‚†Ä‚†Ä‚¢∏‚°Ä‚†Ä‚†à‚°á‚†Ä‚†Ä‚¢ß‚†Ä‚†∏‚°Ñ‚†ô‚†ã‚†Ä‚†Ä‚†Ä‚£ø
‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚££‚†Ä‚†Ä‚†Ä‚£ø‚†Ä‚†Ä‚†Ä‚†à‚£á‚†Ä‚†Ä‚¢≥‚†Ä‚†Ä‚†à‚¢ß‚°Ä‚¢±‚£Ñ‚†Ä‚†Ä‚†Ä‚¢Ä‚°ø
‚†Ä‚†Ä‚†Ä‚†Ä‚£∏‚†É‚†Ä‚†Ä‚†Ä‚¢π‚°Ñ‚†Ä‚†Ä‚†Ä‚†ò‚¢¶‚£Ñ‚°†‚†∑‚°ñ‚†≤‚†ö‚£ç‚†ô‚¢è‚†ì‚†¶‚†¥‚†õ‚†Å
‚†Ä‚†Ä‚†Ä‚¢†‚†è‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚†≥‚†§‚†§‚†¥‚†ã‚†£‚°Ä‚†Ä‚†ò‚†Ä‚†ë‚£à‚£ß‚°ú‚£ß‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚£æ‚£æ‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†±‚£Ñ‚¢Ä‚£Ü‚†Ä‚¢π‚†ë‚¢¥‚¢∏‚°Ü‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚à¢‚°è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†õ‚†º‚£Ñ‚£∏‚°§‚†é‚¢Ä‚°á‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£Ä‚£†‚†Ñ‚¢Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°§‚†ü‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚°ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Å‚†ê‚†õ‚£∫‚¢ø‚£æ‚°§‚†¥‚†ö‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚¢ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†à‚†≥‚£¶‚°Ä‚£Ñ‚£Ä‚†Ä‚†Ä‚†Ä‚¢ª‚£ñ‚†õ‚†ã‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚†ø‚†â‚†â‚†â‚†â‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä"""


def get_banner_text():
    return "SKYMARSHAL"


def show_banner(console_override=None):
    display_console = console_override or console
    display_console.clear()
    ascii_art = get_ascii_art()
    ascii_text = Text(ascii_art, style="cyan")
    display_console.print(Align.center(ascii_text))
    display_console.print()
    banner_text = get_banner_text()
    banner = Text(banner_text, style="bold bright_white")
    display_console.print(Align.center(banner))
    tagline = Text(
        "Manage ‚Ä¢ Analyze ‚Ä¢ Clean up your social media", style="italic dim white"
    )
    display_console.print(Align.center(tagline))
    display_console.print()
    version_text = Text(
        f"v{__version__} ‚Ä¢ Luke ‚Ä¢ ",
        style="dim bright_white link https://lukesteuber.com",
    )
    version_text.append(
        "@lukesteuber.com",
        style="dim bright_blue link https://bsky.app/profile/lukesteuber.com",
    )
    display_console.print(Align.center(version_text))
    display_console.print()


def show_ascii_header_only(console_override=None):
    """Display just the ASCII art and banner text without clearing screen."""
    display_console = console_override or console
    ascii_art = get_ascii_art()
    ascii_text = Text(ascii_art, style="cyan")
    display_console.print(Align.center(ascii_text))
    display_console.print()
    banner_text = get_banner_text()
    banner = Text(banner_text, style="bold bright_white")
    display_console.print(Align.center(banner))
    display_console.print()


def show_startup_sequence(console_override=None):
    display_console = console_override or console
    display_console.clear()
    show_banner(display_console)


if __name__ == "__main__":
    show_startup_sequence()
